<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 命名空间 -->
<mapper namespace="com.chencj.bos.mapper.IBookMapper">

    <!-- Result Map,结果集映射，建立数据库表与实体类的映射 -->
    <resultMap id="BaseResultMap"
               type="com.chencj.bos.domain.Book">
        <!-- coulumn:字段名（对应数据库），
        property:属性（对应实体类） -->
        <!-- id对应主键，也可写result
        <id column="bookID" property="bookID"/>
        -->
        <result column="bookID" property="bookID" />
        <result column="bookName" property="bookName" />
        <result column="bookCounts" property="bookCounts" />
        <result column="detail" property="detail" />
    </resultMap>
    <!-- id对应.java的抽象方法-->
    <!--当前的resultType 不能和resultMap id一样 否则会报错-->
    <select id="selectAll" resultMap="BaseResultMap">
        select * from spring_db.books
    </select>

    <!-- 各种条件s -->
    <!-- where子句 -->
    <sql id="Where_Clause">
        where 1=1
        <if test="bookName != null and bookName != '' ">
            and bookName=#{bookName}
        </if>
        <if test="bookCounts != null and bookCounts != '' ">
            and bookCounts = #{bookCounts}
        </if>
        <if test="detail != null and detail!='' ">
            and detail=#{detail}
        </if>
    </sql>
    <!-- Set自子句 -->
    <!--<sql id="Set_Clause">
        <if test="bookName != null and bookName != '' ">
            bookName = #{bookName},
        </if>
        <if test="password != null and password != '' ">
            password = #{password},
        </if>
        <if test="name != null and name!='' ">
            name = #{name},
        </if>
        <if test="type != null and type!='' ">
            type = #{type},
        </if>
    </sql>-->
    <!--
    仿照模板
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
    uid, username, password, email, home_url, screen_name, created, activated, logged,
    group_name
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chencj.springboot_mybatis.entity.TUsersExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from t_users
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from t_users
        where uid = #{uid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_users
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.chencj.springboot_mybatis.entity.TUsersExample" >
        delete from t_users
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.chencj.springboot_mybatis.entity.TUsers" >
    insert into t_users (uid, username, password,
      email, home_url, screen_name,
      created, activated, logged,
      group_name)
    values (#{uid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{homeUrl,jdbcType=VARCHAR}, #{screenName,jdbcType=VARCHAR},
      #{created,jdbcType=INTEGER}, #{activated,jdbcType=INTEGER}, #{logged,jdbcType=INTEGER},
      #{groupName,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.chencj.springboot_mybatis.entity.TUsers" >
        insert into t_users
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="uid != null" >
                uid,
            </if>
            <if test="username != null" >
                username,
            </if>
            <if test="password != null" >
                password,
            </if>
            <if test="email != null" >
                email,
            </if>
            <if test="homeUrl != null" >
                home_url,
            </if>
            <if test="screenName != null" >
                screen_name,
            </if>
            <if test="created != null" >
                created,
            </if>
            <if test="activated != null" >
                activated,
            </if>
            <if test="logged != null" >
                logged,
            </if>
            <if test="groupName != null" >
                group_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="uid != null" >
                #{uid,jdbcType=INTEGER},
            </if>
            <if test="username != null" >
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="homeUrl != null" >
                #{homeUrl,jdbcType=VARCHAR},
            </if>
            <if test="screenName != null" >
                #{screenName,jdbcType=VARCHAR},
            </if>
            <if test="created != null" >
                #{created,jdbcType=INTEGER},
            </if>
            <if test="activated != null" >
                #{activated,jdbcType=INTEGER},
            </if>
            <if test="logged != null" >
                #{logged,jdbcType=INTEGER},
            </if>
            <if test="groupName != null" >
                #{groupName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.chencj.springboot_mybatis.entity.TUsersExample" resultType="java.lang.Integer" >
        select count(*) from t_users
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update t_users
        <set >
            <if test="record.uid != null" >
                uid = #{record.uid,jdbcType=INTEGER},
            </if>
            <if test="record.username != null" >
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null" >
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null" >
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.homeUrl != null" >
                home_url = #{record.homeUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.screenName != null" >
                screen_name = #{record.screenName,jdbcType=VARCHAR},
            </if>
            <if test="record.created != null" >
                created = #{record.created,jdbcType=INTEGER},
            </if>
            <if test="record.activated != null" >
                activated = #{record.activated,jdbcType=INTEGER},
            </if>
            <if test="record.logged != null" >
                logged = #{record.logged,jdbcType=INTEGER},
            </if>
            <if test="record.groupName != null" >
                group_name = #{record.groupName,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update t_users
        set uid = #{record.uid,jdbcType=INTEGER},
        username = #{record.username,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        home_url = #{record.homeUrl,jdbcType=VARCHAR},
        screen_name = #{record.screenName,jdbcType=VARCHAR},
        created = #{record.created,jdbcType=INTEGER},
        activated = #{record.activated,jdbcType=INTEGER},
        logged = #{record.logged,jdbcType=INTEGER},
        group_name = #{record.groupName,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.chencj.springboot_mybatis.entity.TUsers" >
        update t_users
        <set >
            <if test="username != null" >
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="homeUrl != null" >
                home_url = #{homeUrl,jdbcType=VARCHAR},
            </if>
            <if test="screenName != null" >
                screen_name = #{screenName,jdbcType=VARCHAR},
            </if>
            <if test="created != null" >
                created = #{created,jdbcType=INTEGER},
            </if>
            <if test="activated != null" >
                activated = #{activated,jdbcType=INTEGER},
            </if>
            <if test="logged != null" >
                logged = #{logged,jdbcType=INTEGER},
            </if>
            <if test="groupName != null" >
                group_name = #{groupName,jdbcType=VARCHAR},
            </if>
        </set>
        where uid = #{uid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.chencj.springboot_mybatis.entity.TUsers" >
    update 数据库名.表名
    set 表中字段 = #{表中字段,jdbcType=VARCHAR 类型},
    where 条件字段 = #{条件字段,jdbcType=INTEGER 类型}
    /*
    uid = #{uid,jdbcType=INTEGER}   #{值}:占位符，转换对应的值
    */
  </update>

  -->
</mapper>